BITS 10
MINHEAP 1000
@define end 0b11111111
@define start 0b11111110


// drawSprite,r2 =  pointer to sprite, r3  = sprite origin x, r7 = sprite origin y
// r6 + r5 not preserved
.wl
ADD R8 R8 1
OUT %wait 99
IN r0 %wait
BNE .wl R8 5

IMM r2 .B
IMM r3 1
IMM r7 1

cal .drawSprite
IMM r3 7
IMM r2 .E
cal .drawSprite
IMM r3 14
IMM r2 .S
cal .drawSprite
IMm r3 21
IMM r2 .T
cal .drawSprite
IMM r7 16
IMM r3 5
IMM R2 .B
cal .drawSprite
IMM R2 .O
IMM R7 17
IMM r3 11
cal .drawSprite
IMM R2 .Y
IMM R7 16
IMM r3 17
cal .drawSprite
HLT




.drawSprite

// check for start
LOD R1 R2  
BNE .finish R1 start
ADD R2 R2 1
.loop 

LOD R1 R2
// check for end
BRE .finish R1 end 

ADD R2 R2 1
AND R5 R1 0b00001111  // mask for lo 
BSR R6 R1 4 // hi
ADD R6 R6 r7
ADD r5 r5 r3
// y = hi
// x = lo
OUT %x R5
Out %y R6
Out %color 1
Out %wait 99
In 99 %wait
jmp .loop




.finish
IMM R2 0
IMM R1 0
RET
 
.B
    DW [start,0,0x10,0x20,0x30,0x40,0x50,0x60,0x70D,0x71,0x72,0x73,0x64,0x54,0x43,0x42,0x41,0x40,0x34,0x24,0x01,0x02,0x03,0x14,end]
.E
    Dw [start,0x01,0x02,0x03,0x10,0x20,0x30,0x31,0x32,0x33,0x40,0x50,,0x61,0x62,0x63 end]
.S
    Dw [start  0x01,0x02,0x03,0x04,0x15,0x25,0x10,0x20,0x30,0x40,0x51,0x52,0x53,0x54,0x65,0x75,0x85,0x94,0x93,0x92,0x91 ,end ]
.T
    Dw [start   0,0x01,0x02,0x03,0x04,0x12,0x22,0x32,0x42,0x52  , end]
.O
    Dw [start, 0,0x01,0x02,0x03,0x04,0x10,0x20,0x30,0x40,0x50,0x51,0x52,0x53,0x54,0x24,0x34,0x14,0x44s  ,end]

.Y
    Dw [start,0,0x10,0x21,0x32,0x34,0x25,0x016,0x06,0x43,0x53,0x63,0x73, ,end]
